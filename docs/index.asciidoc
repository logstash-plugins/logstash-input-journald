:plugin: journald
:type: input

///////////////////////////////////////////
START - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////
:version: %VERSION%
:release_date: %RELEASE_DATE%
:changelog_url: %CHANGELOG_URL%
:include_path: ../../../../logstash/docs/include
///////////////////////////////////////////
END - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////

[id="plugins-{type}s-{plugin}"]

=== Journald input plugin

include::{include_path}/plugin_header.asciidoc[]

==== Description

Pull events from a local systemd journal.

See requirements https://github.com/ledbettj/systemd-journal

[id="plugins-{type}s-{plugin}-options"]
==== Journald Input Configuration Options

This plugin supports the following configuration options plus the <<plugins-{type}s-{plugin}-common-options>> described later.

[cols="<,<,<",options="header",]
|=======================================================================
|Setting |Input type|Required
| <<plugins-{type}s-{plugin}-filter>> |<<hash,hash>>|No
| <<plugins-{type}s-{plugin}-flags>> |<<string,string>>, one of `[0, 1, 2, 4]`|No
| <<plugins-{type}s-{plugin}-lowercase>> |<<boolean,boolean>>|No
| <<plugins-{type}s-{plugin}-path>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-seekto>> |<<string,string>>, one of `["head", "tail"]`|No
| <<plugins-{type}s-{plugin}-sincedb_path>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-sincedb_write_interval>> |<<number,number>>|No
| <<plugins-{type}s-{plugin}-thisboot>> |<<boolean,boolean>>|No
| <<plugins-{type}s-{plugin}-threads>> |<<number,number>>|No
| <<plugins-{type}s-{plugin}-wait_timeout>> |<<number,number>>|No
|=======================================================================

Also see <<plugins-{type}s-{plugin}-common-options>> for a list of options supported by all
input plugins.

&nbsp;

[id="plugins-{type}s-{plugin}-filter"]
===== `filter` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Filter on events. Not heavily tested.


[id="plugins-{type}s-{plugin}-flags"]
===== `flags` 

  * Value can be any of: `0`, `1`, `2`, `4`
  * Default value is `0`

System journal flags
0 = all avalable
1 = local only
2 = runtime only
4 = system only


[id="plugins-{type}s-{plugin}-lowercase"]
===== `lowercase` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Lowercase annoying UPPERCASE fieldnames. (May clobber existing fields)


[id="plugins-{type}s-{plugin}-path"]
===== `path` 

  * Value type is <<string,string>>
  * Default value is `"/var/log/journal"`

Path to read journal files from


[id="plugins-{type}s-{plugin}-seekto"]
===== `seekto` 

  * Value can be any of: `head`, `tail`
  * Default value is `"tail"`

Where in the journal to start capturing logs
Options: head, tail

[id="plugins-{type}s-{plugin}-sincedb_path"]
===== `sincedb_path` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Where to write the sincedb database (keeps track of the current
position of the journal). The default will write
the sincedb file to matching `$HOME/.sincedb_journal`


[id="plugins-{type}s-{plugin}-sincedb_write_interval"]
===== `sincedb_write_interval` 

  * Value type is <<number,number>>
  * Default value is `15`

How often (in seconds) to write a since database with the current position of
the journal.


[id="plugins-{type}s-{plugin}-thisboot"]
===== `thisboot` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Filter logs since the system booted (only relevant with seekto => "head")


[id="plugins-{type}s-{plugin}-threads"]
===== `threads` 

  * Value type is <<number,number>>
  * Default value is `1`



[id="plugins-{type}s-{plugin}-wait_timeout"]
===== `wait_timeout` 

  * Value type is <<number,number>>
  * Default value is `3000000`

The max timeout in microsends to wait for new events from the journal.
Set to -1 to wait indefinitely. Setting this to a large value will
result in delayed shutdown of the plugin.



[id="plugins-{type}s-{plugin}-common-options"]
include::{include_path}/{type}.asciidoc[]